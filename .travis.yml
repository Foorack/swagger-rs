language: rust
rust:
  - stable
  - beta
  - nightly
before_script:
  - | # Ensure CHANGELOG is up-to-date:
    ROOT_PACKAGE=swagger;
    RUST_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -er "[.packages[] | select(.name == \"$ROOT_PACKAGE\") | .version][0]");
    (grep -q "## \[$RUST_VERSION\] -" CHANGELOG.md || (echo "Missing CHANGELOG entry for version $RUST_VERSION"; /bin/false)) &&
    (grep -q "\[Unreleased\]: .*/$RUST_VERSION\.\.\.HEAD$" CHANGELOG.md || (echo "Unreleased tag in CHANGELOG footer not updated for version $RUST_VERSION"; /bin/false)) &&
    (grep -q "\[$RUST_VERSION\]: .*\.\.\.$RUST_VERSION$" CHANGELOG.md || (echo "Missing tag for version $RUST_VERSION in CHANGELOG footer"; /bin/false)) &&
    echo "CHANGELOG is up-to-date for version $RUST_VERSION."
matrix:
  allow_failures:
    - rust: nightly
  include:
    - rust: nightly-2018-07-16
      before_script:
      - rustup component add clippy-preview
      script:
      - cargo clippy -- -D warnings
    - rust: stable
      env: RUSTFMT=1
      before_script:
      - rustup component add rustfmt-preview
      script:
      - cargo fmt -- --check
